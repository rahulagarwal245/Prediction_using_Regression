{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fgcUup5KrncF"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('/content/13. Walmart_sales.csv')\n"
      ],
      "metadata": {
        "id": "v2qqxxkHsCH2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "EFr92R-esR6T",
        "outputId": "b6d8e575-c235-4225-f300-f78a5ab436f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Store      Date  Weekly_Sales  Holiday_Flag  Temperature  Fuel_Price  \\\n",
              "0      1  05-02-10    1643690.90             0        42.31       2.572   \n",
              "1      1  12-02-10    1641957.44             1        38.51       2.548   \n",
              "2      1  19-02-10    1611968.17             0        39.93       2.514   \n",
              "3      1  26-02-10    1409727.59             0        46.63       2.561   \n",
              "4      1  05-03-10    1554806.68             0        46.50       2.625   \n",
              "\n",
              "          CPI  Unemployment  \n",
              "0  211.096358         8.106  \n",
              "1  211.242170         8.106  \n",
              "2  211.289143         8.106  \n",
              "3  211.319643         8.106  \n",
              "4  211.350143         8.106  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cec79e5f-3715-4f2d-b2a3-39a9ad1927f9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Store</th>\n",
              "      <th>Date</th>\n",
              "      <th>Weekly_Sales</th>\n",
              "      <th>Holiday_Flag</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Fuel_Price</th>\n",
              "      <th>CPI</th>\n",
              "      <th>Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>05-02-10</td>\n",
              "      <td>1643690.90</td>\n",
              "      <td>0</td>\n",
              "      <td>42.31</td>\n",
              "      <td>2.572</td>\n",
              "      <td>211.096358</td>\n",
              "      <td>8.106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>12-02-10</td>\n",
              "      <td>1641957.44</td>\n",
              "      <td>1</td>\n",
              "      <td>38.51</td>\n",
              "      <td>2.548</td>\n",
              "      <td>211.242170</td>\n",
              "      <td>8.106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>19-02-10</td>\n",
              "      <td>1611968.17</td>\n",
              "      <td>0</td>\n",
              "      <td>39.93</td>\n",
              "      <td>2.514</td>\n",
              "      <td>211.289143</td>\n",
              "      <td>8.106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>26-02-10</td>\n",
              "      <td>1409727.59</td>\n",
              "      <td>0</td>\n",
              "      <td>46.63</td>\n",
              "      <td>2.561</td>\n",
              "      <td>211.319643</td>\n",
              "      <td>8.106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>05-03-10</td>\n",
              "      <td>1554806.68</td>\n",
              "      <td>0</td>\n",
              "      <td>46.50</td>\n",
              "      <td>2.625</td>\n",
              "      <td>211.350143</td>\n",
              "      <td>8.106</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cec79e5f-3715-4f2d-b2a3-39a9ad1927f9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cec79e5f-3715-4f2d-b2a3-39a9ad1927f9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cec79e5f-3715-4f2d-b2a3-39a9ad1927f9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4b88727e-b2b8-4d95-b8cd-9400810a7d0d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b88727e-b2b8-4d95-b8cd-9400810a7d0d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4b88727e-b2b8-4d95-b8cd-9400810a7d0d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 6435,\n  \"fields\": [\n    {\n      \"column\": \"Store\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 45,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          40,\n          26,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 143,\n        \"samples\": [\n          \"04-05-12\",\n          \"18-06-10\",\n          \"02-09-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekly_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 564366.6220536974,\n        \"min\": 209986.25,\n        \"max\": 3818686.45,\n        \"num_unique_values\": 6435,\n        \"samples\": [\n          1138800.32,\n          1304850.67,\n          1769296.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday_Flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.444932875811585,\n        \"min\": -2.06,\n        \"max\": 100.14,\n        \"num_unique_values\": 3528,\n        \"samples\": [\n          51.13,\n          98.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4590197071928516,\n        \"min\": 2.472,\n        \"max\": 4.468,\n        \"num_unique_values\": 892,\n        \"samples\": [\n          2.84,\n          3.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.35671229566413,\n        \"min\": 126.064,\n        \"max\": 227.2328068,\n        \"num_unique_values\": 2145,\n        \"samples\": [\n          184.613419,\n          214.1083654\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8758847818628084,\n        \"min\": 3.879,\n        \"max\": 14.313,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          8.185,\n          7.804\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6bETQQaRsTWn",
        "outputId": "3a901818-9eba-43e6-903a-5ce32c61a8d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 6435 entries, 0 to 6434\n",
            "Data columns (total 8 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   Store         6435 non-null   int64  \n",
            " 1   Date          6435 non-null   object \n",
            " 2   Weekly_Sales  6435 non-null   float64\n",
            " 3   Holiday_Flag  6435 non-null   int64  \n",
            " 4   Temperature   6435 non-null   float64\n",
            " 5   Fuel_Price    6435 non-null   float64\n",
            " 6   CPI           6435 non-null   float64\n",
            " 7   Unemployment  6435 non-null   float64\n",
            "dtypes: float64(5), int64(2), object(1)\n",
            "memory usage: 402.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NqZ9saJBsV4M",
        "outputId": "75f099b0-b799-4e0b-d0d6-ae892cb13335"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6435, 8)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "qFKERGLVsX2i",
        "outputId": "2be82326-09b3-4160-ee1d-3a5d56b1d38b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Store  Weekly_Sales  Holiday_Flag  Temperature   Fuel_Price  \\\n",
              "count  6435.000000  6.435000e+03   6435.000000  6435.000000  6435.000000   \n",
              "mean     23.000000  1.046965e+06      0.069930    60.663782     3.358607   \n",
              "std      12.988182  5.643666e+05      0.255049    18.444933     0.459020   \n",
              "min       1.000000  2.099862e+05      0.000000    -2.060000     2.472000   \n",
              "25%      12.000000  5.533501e+05      0.000000    47.460000     2.933000   \n",
              "50%      23.000000  9.607460e+05      0.000000    62.670000     3.445000   \n",
              "75%      34.000000  1.420159e+06      0.000000    74.940000     3.735000   \n",
              "max      45.000000  3.818686e+06      1.000000   100.140000     4.468000   \n",
              "\n",
              "               CPI  Unemployment  \n",
              "count  6435.000000   6435.000000  \n",
              "mean    171.578394      7.999151  \n",
              "std      39.356712      1.875885  \n",
              "min     126.064000      3.879000  \n",
              "25%     131.735000      6.891000  \n",
              "50%     182.616521      7.874000  \n",
              "75%     212.743293      8.622000  \n",
              "max     227.232807     14.313000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0bf2ee4-b611-426d-9664-d71cc307aa58\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Store</th>\n",
              "      <th>Weekly_Sales</th>\n",
              "      <th>Holiday_Flag</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Fuel_Price</th>\n",
              "      <th>CPI</th>\n",
              "      <th>Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>6435.000000</td>\n",
              "      <td>6.435000e+03</td>\n",
              "      <td>6435.000000</td>\n",
              "      <td>6435.000000</td>\n",
              "      <td>6435.000000</td>\n",
              "      <td>6435.000000</td>\n",
              "      <td>6435.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>23.000000</td>\n",
              "      <td>1.046965e+06</td>\n",
              "      <td>0.069930</td>\n",
              "      <td>60.663782</td>\n",
              "      <td>3.358607</td>\n",
              "      <td>171.578394</td>\n",
              "      <td>7.999151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>12.988182</td>\n",
              "      <td>5.643666e+05</td>\n",
              "      <td>0.255049</td>\n",
              "      <td>18.444933</td>\n",
              "      <td>0.459020</td>\n",
              "      <td>39.356712</td>\n",
              "      <td>1.875885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.099862e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-2.060000</td>\n",
              "      <td>2.472000</td>\n",
              "      <td>126.064000</td>\n",
              "      <td>3.879000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>12.000000</td>\n",
              "      <td>5.533501e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>47.460000</td>\n",
              "      <td>2.933000</td>\n",
              "      <td>131.735000</td>\n",
              "      <td>6.891000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>23.000000</td>\n",
              "      <td>9.607460e+05</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>62.670000</td>\n",
              "      <td>3.445000</td>\n",
              "      <td>182.616521</td>\n",
              "      <td>7.874000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>34.000000</td>\n",
              "      <td>1.420159e+06</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>74.940000</td>\n",
              "      <td>3.735000</td>\n",
              "      <td>212.743293</td>\n",
              "      <td>8.622000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>45.000000</td>\n",
              "      <td>3.818686e+06</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>100.140000</td>\n",
              "      <td>4.468000</td>\n",
              "      <td>227.232807</td>\n",
              "      <td>14.313000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0bf2ee4-b611-426d-9664-d71cc307aa58')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a0bf2ee4-b611-426d-9664-d71cc307aa58 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a0bf2ee4-b611-426d-9664-d71cc307aa58');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d617122c-f19e-4a7f-82a6-2ab1ddc6665c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d617122c-f19e-4a7f-82a6-2ab1ddc6665c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d617122c-f19e-4a7f-82a6-2ab1ddc6665c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Store\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2267.530836160574,\n        \"min\": 1.0,\n        \"max\": 6435.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          6435.0,\n          23.0,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekly_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1200219.5149406514,\n        \"min\": 6435.0,\n        \"max\": 3818686.45,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1046964.8775617715,\n          960746.04,\n          6435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday_Flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2275.049172639847,\n        \"min\": 0.0,\n        \"max\": 6435.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.06993006993006994,\n          1.0,\n          0.25504894436981873\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2257.0439834306026,\n        \"min\": -2.06,\n        \"max\": 6435.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          60.66378243978244,\n          62.67,\n          6435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2274.0622491841236,\n        \"min\": 0.4590197071928516,\n        \"max\": 6435.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.358606837606838,\n          3.445,\n          6435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2220.778606683361,\n        \"min\": 39.35671229566413,\n        \"max\": 6435.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          171.57839384878014,\n          182.6165205,\n          6435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2272.520171016687,\n        \"min\": 1.8758847818628084,\n        \"max\": 6435.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.99915104895105,\n          7.874,\n          6435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "YW56CR3nsaBq",
        "outputId": "81428646-36c8-4988-e0cf-e437d82241a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Store           0\n",
              "Date            0\n",
              "Weekly_Sales    0\n",
              "Holiday_Flag    0\n",
              "Temperature     0\n",
              "Fuel_Price      0\n",
              "CPI             0\n",
              "Unemployment    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Store</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Weekly_Sales</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Holiday_Flag</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Temperature</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fuel_Price</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CPI</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Unemployment</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: check duplicates in whole data rows\n",
        "\n",
        "duplicate_rows_df = df[df.duplicated()]\n",
        "print(\"Number of duplicate rows:\", duplicate_rows_df.shape[0])\n",
        "duplicate_rows_df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 107
        },
        "id": "UpYJS0ZpseLE",
        "outputId": "7c37e058-da45-43c5-d077-d9abf509e63c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of duplicate rows: 0\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [Store, Date, Weekly_Sales, Holiday_Flag, Temperature, Fuel_Price, CPI, Unemployment]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f3e54e31-b3e2-4dd3-b1fa-2afaaf30e3e9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Store</th>\n",
              "      <th>Date</th>\n",
              "      <th>Weekly_Sales</th>\n",
              "      <th>Holiday_Flag</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Fuel_Price</th>\n",
              "      <th>CPI</th>\n",
              "      <th>Unemployment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3e54e31-b3e2-4dd3-b1fa-2afaaf30e3e9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f3e54e31-b3e2-4dd3-b1fa-2afaaf30e3e9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f3e54e31-b3e2-4dd3-b1fa-2afaaf30e3e9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "  <div id=\"id_1a36a5fa-3317-427e-90eb-fdf0bd721627\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('duplicate_rows_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_1a36a5fa-3317-427e-90eb-fdf0bd721627 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('duplicate_rows_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "duplicate_rows_df",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%y')\n",
        "\n",
        "# Create additional features\n",
        "df['Month'] = df['Date'].dt.month\n",
        "df['Year'] = df['Date'].dt.year"
      ],
      "metadata": {
        "id": "PJB6sIJQuumT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "dAmaXK3wuxIi",
        "outputId": "3362a233-ecf8-446e-f47e-3c53da92b62a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Store       Date  Weekly_Sales  Holiday_Flag  Temperature  Fuel_Price  \\\n",
              "0      1 2010-02-05    1643690.90             0        42.31       2.572   \n",
              "1      1 2010-02-12    1641957.44             1        38.51       2.548   \n",
              "2      1 2010-02-19    1611968.17             0        39.93       2.514   \n",
              "3      1 2010-02-26    1409727.59             0        46.63       2.561   \n",
              "4      1 2010-03-05    1554806.68             0        46.50       2.625   \n",
              "\n",
              "          CPI  Unemployment  Month  Year  \n",
              "0  211.096358         8.106      2  2010  \n",
              "1  211.242170         8.106      2  2010  \n",
              "2  211.289143         8.106      2  2010  \n",
              "3  211.319643         8.106      2  2010  \n",
              "4  211.350143         8.106      3  2010  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9798a0da-48e5-4fb2-a420-62aaa34cdacc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Store</th>\n",
              "      <th>Date</th>\n",
              "      <th>Weekly_Sales</th>\n",
              "      <th>Holiday_Flag</th>\n",
              "      <th>Temperature</th>\n",
              "      <th>Fuel_Price</th>\n",
              "      <th>CPI</th>\n",
              "      <th>Unemployment</th>\n",
              "      <th>Month</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2010-02-05</td>\n",
              "      <td>1643690.90</td>\n",
              "      <td>0</td>\n",
              "      <td>42.31</td>\n",
              "      <td>2.572</td>\n",
              "      <td>211.096358</td>\n",
              "      <td>8.106</td>\n",
              "      <td>2</td>\n",
              "      <td>2010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2010-02-12</td>\n",
              "      <td>1641957.44</td>\n",
              "      <td>1</td>\n",
              "      <td>38.51</td>\n",
              "      <td>2.548</td>\n",
              "      <td>211.242170</td>\n",
              "      <td>8.106</td>\n",
              "      <td>2</td>\n",
              "      <td>2010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>2010-02-19</td>\n",
              "      <td>1611968.17</td>\n",
              "      <td>0</td>\n",
              "      <td>39.93</td>\n",
              "      <td>2.514</td>\n",
              "      <td>211.289143</td>\n",
              "      <td>8.106</td>\n",
              "      <td>2</td>\n",
              "      <td>2010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>2010-02-26</td>\n",
              "      <td>1409727.59</td>\n",
              "      <td>0</td>\n",
              "      <td>46.63</td>\n",
              "      <td>2.561</td>\n",
              "      <td>211.319643</td>\n",
              "      <td>8.106</td>\n",
              "      <td>2</td>\n",
              "      <td>2010</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>2010-03-05</td>\n",
              "      <td>1554806.68</td>\n",
              "      <td>0</td>\n",
              "      <td>46.50</td>\n",
              "      <td>2.625</td>\n",
              "      <td>211.350143</td>\n",
              "      <td>8.106</td>\n",
              "      <td>3</td>\n",
              "      <td>2010</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9798a0da-48e5-4fb2-a420-62aaa34cdacc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9798a0da-48e5-4fb2-a420-62aaa34cdacc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9798a0da-48e5-4fb2-a420-62aaa34cdacc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-85316836-b361-4ea1-abb6-9839e8646545\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85316836-b361-4ea1-abb6-9839e8646545')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-85316836-b361-4ea1-abb6-9839e8646545 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 6435,\n  \"fields\": [\n    {\n      \"column\": \"Store\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 45,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          40,\n          26,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-02-05 00:00:00\",\n        \"max\": \"2012-10-26 00:00:00\",\n        \"num_unique_values\": 143,\n        \"samples\": [\n          \"2012-05-04 00:00:00\",\n          \"2010-06-18 00:00:00\",\n          \"2011-09-02 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weekly_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 564366.6220536974,\n        \"min\": 209986.25,\n        \"max\": 3818686.45,\n        \"num_unique_values\": 6435,\n        \"samples\": [\n          1138800.32,\n          1304850.67,\n          1769296.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Holiday_Flag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.444932875811585,\n        \"min\": -2.06,\n        \"max\": 100.14,\n        \"num_unique_values\": 3528,\n        \"samples\": [\n          51.13,\n          98.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel_Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4590197071928516,\n        \"min\": 2.472,\n        \"max\": 4.468,\n        \"num_unique_values\": 892,\n        \"samples\": [\n          2.84,\n          3.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.35671229566413,\n        \"min\": 126.064,\n        \"max\": 227.2328068,\n        \"num_unique_values\": 2145,\n        \"samples\": [\n          184.613419,\n          214.1083654\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unemployment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8758847818628084,\n        \"min\": 3.879,\n        \"max\": 14.313,\n        \"num_unique_values\": 349,\n        \"samples\": [\n          8.185,\n          7.804\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          12,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2010,\n          2011\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: identify outliers of weekly sales, temperature, fuel price,cpi, unemployment, create box plot only\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Identify outliers using box plots\n",
        "numerical_features = ['Weekly_Sales', 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment']\n",
        "\n",
        "plt.figure(figsize=(15, 10))\n",
        "for i, col in enumerate(numerical_features):\n",
        "    plt.subplot(2, 3, i+1)\n",
        "    sns.boxplot(y=df[col])\n",
        "    plt.title(col)\n",
        "    plt.ylabel('')\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "id": "X9uxL4BPux5X",
        "outputId": "581f420c-561d-4809-bfd9-caf2d26b007b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: treat outliers using IQR and then again create box plot\n",
        "\n",
        "# Calculate IQR for each numerical feature\n",
        "Q1 = df[numerical_features].quantile(0.25)\n",
        "Q3 = df[numerical_features].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Define bounds for outliers\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# Remove outliers\n",
        "df_no_outliers = df[~((df[numerical_features] < lower_bound) | (df[numerical_features] > upper_bound)).any(axis=1)]\n",
        "\n",
        "# Create box plots for the data without outliers\n",
        "plt.figure(figsize=(15, 10))\n",
        "for i, col in enumerate(numerical_features):\n",
        "    plt.subplot(2, 3, i+1)\n",
        "    sns.boxplot(y=df_no_outliers[col])\n",
        "    plt.title(col)\n",
        "    plt.ylabel('')\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 870
        },
        "id": "LgMVkskCwLb1",
        "outputId": "23e9ed0b-e259-46da-8b2d-578f4616a937"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: Treat outliers of unemployment without iqr generate box plot\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# ... (Your existing code for data loading and preprocessing)\n",
        "\n",
        "# Function to treat outliers using a threshold for standard deviation\n",
        "def treat_outliers_std(df, col, threshold=3):\n",
        "    mean = df[col].mean()\n",
        "    std = df[col].std()\n",
        "    lower_bound = mean - threshold * std\n",
        "    upper_bound = mean + threshold * std\n",
        "    df[col] = np.clip(df[col], lower_bound, upper_bound)\n",
        "    return df\n",
        "\n",
        "# Treat outliers for 'Unemployment' using the standard deviation method\n",
        "df = treat_outliers_std(df, 'Unemployment', threshold=3)\n",
        "\n",
        "# Create box plots for the data after outlier treatment (without IQR)\n",
        "plt.figure(figsize=(8, 6))  # Adjust figure size as needed\n",
        "sns.boxplot(y=df['Unemployment'])\n",
        "plt.title('Unemployment After Outlier Treatment (Standard Deviation)')\n",
        "plt.ylabel('')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 526
        },
        "id": "VNEeeY_L0FEY",
        "outputId": "10407d74-e5df-4ef6-d98c-984583347d8e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAApsAAAH9CAYAAABV17e+AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAOsNJREFUeJzt3Xl4U2X+/vE7tDQthYayFKjsCJZFZFNHESgCAoMg4y6KiAsijoj6Q8EVFamoA7gBgspaFFBBh0ERlA7uiriM3xEHFIFRWcWURYrSz+8Pr2SaJoUW8jSlvF/XlQvynKfnfHJycnL3LE89ZmYCAAAAHKgQ6wIAAABQfhE2AQAA4AxhEwAAAM4QNgEAAOAMYRMAAADOEDYBAADgDGETAAAAzhA2AQAA4AxhEwAAAM4QNlHqrrrqKjVs2DDWZZQrb7zxhtq0aaPExER5PB798ssvsS6pVHk8Ho0ZMyb4fObMmfJ4PPr+++9jVhPcGDZsmHr06BHrMo5Yae7/jqXPwZgxY+TxeKI6z5ycHHk8HuXk5ER1vgXt3LlTycnJWrp0qbNllAeEzTIg8CHbsWNHxOmtWrVSZmZm6RaFqNq3b5/GjBlzRDu9pUuXyuPxKD09Xfn5+WHTd+7cqYsvvlhJSUl6+umnNWfOHCUnJ2vcuHFavHjx0RdfQnv37tWDDz6o1q1bq1KlSvL5fOrUqZNmz56to/nruEuXLg0JlGWBx+Mp1sPll11BkydP1syZM0tlWUfr3//+t8aMGVOiILRhwwY9++yzuvPOO0Pat2/frptvvlkZGRlKSkpSWlqaTjvtNN1xxx3as2dPsN+8efM0adKkKL2C8iPwHRR4VKpUSfXr11ffvn01Y8YM5eXlxbrEQ4rldl+9enVde+21uueee2Ky/GNFfKwLAI4H+/bt0/333y9JJf7FITs7Ww0bNtT333+vt99+W927dw+Z/sknn2j37t168MEHQ6aNGzdOF154ofr373+05Rfb1q1b1a1bN3399de69NJL9de//lX79+/Xyy+/rEGDBmnp0qXKzs5WXFxciee9dOlSPf3008UKnAMHDtSll14qr9d7BK+i+ObMmRPyfPbs2Vq+fHlYe/PmzZ3WETB58mTVqFFDV111Vaks72j8+9//1v3336/MzMxiH+l7/PHH1ahRI3Xt2jXY9vPPP6tDhw7Kzc3V1VdfrYyMDO3cuVNffvmlpkyZohtuuEGVK1eW9EfY/OqrrzRixAgHr+jYN2XKFFWuXFl5eXn64YcftGzZMl199dWaNGmSlixZonr16jlb9t13361Ro0Yd0c8Wtd137txZv/76qxISEqJQYdGGDh2qJ554Qm+//bbOPvtsp8s6VhE2gTJs7969evXVV5WVlaUZM2YoOzs7LGxu27ZNklS1alXn9ezfv18JCQmqUCHySZFBgwbp66+/1qJFi9SvX79g+/DhwzVy5Eg99thjatu2re644w6ndcbFxR1RoC3K3r17lZycHNZ+xRVXhDz/8MMPtXz58rD2wvbt26dKlSpFrb7jwW+//abs7GwNHTo0pP25557Tpk2b9N577+nMM88MmZabm+s8aMRSfn6+Dhw4oMTExKjM78ILL1SNGjWCz++9915lZ2fryiuv1EUXXaQPP/wwKsuJJD4+XvHx0Y0kFSpUiNq6OZTmzZurVatWmjlzJmGzKIaYu++++0ySbd++PeL0li1bWpcuXYLPV65caZJs/vz5NnbsWDvhhBPM6/Xa2WefbevWrQv7+Q8//NB69uxpKSkplpSUZJ07d7Z33303Yg3ffPONXX755ZaSkmI1atSwu+++2/Lz823Tpk3Wr18/q1KlitWqVcsee+yxkJ8P1PTiiy/a6NGjrVatWlapUiXr27evbdq0KaTvoEGDrEGDBiFte/bssVtvvdXq1q1rCQkJ1qxZM3v00UctPz8/2Kdz587WunXriOuoWbNmds4555iZ2YYNG0ySPfroo/bUU09Zo0aNLCkpyXr06GGbNm2y/Px8e+CBB+yEE06wxMRE69evn+3cuTNsnkuXLrWzzjrLKlWqZJUrV7Y///nP9tVXX4W9luTkZPvvf/9r5513niUnJ1uNGjXstttus99//z2knsKP++67L+JrKWjOnDlWoUIF++mnn2z8+PGWkpJiv/76a3B6ly5dwuY7aNCgiMsbNGhQ8Of++9//2uDBgy0tLc0SEhKsRYsW9txzz4UsO/CevvDCC3bXXXdZenq6eTwe27VrV8RaP/jgA5NkV199dcTpv/32mzVt2tRSU1Nt3759IctYuXJlSN/AOpsxY0ZwPUd6TQGF1+eMGTNMkm3YsCFkviV5T9evX2+9e/e2ypUr23nnnRfxNRV24403WuHdapcuXaxly5a2evVq69SpkyUlJdnNN99sZmb79++3e++915o0aWIJCQlWt25dGzlypO3fvz9kHs8//7x17drVatasaQkJCda8eXObPHlySJ8GDRqErZ/AfiOwPt555x276aabrEaNGubz+WzIkCGWl5dnu3btsoEDB1rVqlWtatWqNnLkyJDPnpnZwYMHbeLEidaiRQvzer2WlpZmQ4YMsZ9//jmsjj59+tg777xjp556qnm9XmvUqJHNmjUr2CdQT+FH4e2goLffftskWU5OTkj79ddfb3FxcXbw4MEifzbwPhReXmA/lJeXZ/fcc4+1a9fOUlJSrFKlSnbWWWfZ22+/HTKPgvuWZ555xho3bmwJCQnWoUMH+/jjj8OWuWjRImvZsqV5vV5r2bKlvfLKKxH3f48++qidccYZVq1aNUtMTLR27drZwoULw+YnyW688UabO3eutWjRwuLj423RokVmZvbVV19Z165dLTEx0U444QR78MEH7bnnnov4OSjscN9BQ4YMMUn25ptvhrQf7rtl4cKFEd8zM7OpU6eaJPvXv/4VUkNBR7vdF7V/WbBggbVr184SExOtevXqdvnll9t///vfkD7F2bcXdMstt1jVqlXDPjf4A2GzDDjSsNm2bVtr3769TZw40caMGWOVKlWy0047LeRn33rrLUtISLAzzjjD/va3v9nEiROtdevWlpCQYB999FFYDW3atLHLLrvMJk+ebH369DFJNmHCBDvppJPshhtusMmTJ1vHjh1Nkv3zn/8Mq+nkk0+21q1b24QJE2zUqFGWmJhozZo1C4YLs/CwmZ+fb2effbZ5PB679tpr7amnnrK+ffuaJBsxYkSw3/Tp00N2TgEff/yxSbLZs2eb2f++ENq0aWMtWrSwCRMm2N13320JCQn2pz/9ye68804788wz7YknnrDhw4ebx+OxwYMHh8xz9uzZ5vF4rFevXvbkk0/a+PHjrWHDhla1atWQHfegQYMsMTHRWrZsaVdffbVNmTLFLrjgApMU3Cnu2bPHpkyZYpLsL3/5i82ZM8fmzJljX3zxRcT3u6BevXpZt27dzMxs48aN5vF4bMGCBcHpb775ZvCL4IEHHrA5c+bY+++/b3PmzDGv12udOnUKLu/99983M7MtW7ZY3bp1rV69evbAAw/YlClTrF+/fibJJk6cGPaetmjRwtq0aWMTJkywrKws27t3b8Ra77zzziK/WAIC29ny5ctDlnG4sPn+++9bjx49TFLw9cyZMyfYvzhhsyTvqdfrtSZNmtigQYNs6tSpwW3rcIoKm7Vr17aaNWvaTTfdZM8884wtXrzYDh48aOecc45VqlTJRowYYc8884z99a9/tfj4+LBwe+qpp9pVV11lEydOtCeffNLOOecck2RPPfVUsM+iRYusbt26lpGREVw/gXAQWB9t2rSxXr162dNPP20DBw40SXb77bfbWWedZQMGDLDJkyfbueeea5JCwqGZ2bXXXmvx8fF23XXX2dSpU+2OO+6w5ORkO/XUU+3AgQPBfg0aNLCTTjrJatWqZXfeeac99dRT1q5dO/N4PMFg/+2339rw4cNNkt15553Berds2VLkuh07dqx5PB7z+/0h7ePGjTNJNnPmzEO+N2+++aa1adPGatSoEVxeIKht377d6tSpY7feeqtNmTLFHnnkETvppJOsYsWK9tlnnwXnEdgu27ZtayeeeKKNHz/eHnnkEatRo4bVrVs3ZD0sW7bMKlSoYK1atbIJEybYXXfdZT6fz1q2bBkWNuvWrWvDhg2zp556yiZMmGCnnXaaSbIlS5aE9JNkzZs3t5o1a9r9999vTz/9tH322Wf2008/Wc2aNS01NdXGjBljjz76qDVt2tRat24dlbD5zjvvmCT7f//v/wXbivPdsm/fPqtcubINGzYsbJ5du3a1li1bhtVQ0NFu95H2L4HPwqmnnmoTJ060UaNGWVJSkjVs2DDkF+ni7NsLmjt3bsTvJ/yBsFkGHGnYbN68ueXl5QXbH3/88ZCNPT8/35o2bWo9e/YM+W1r37591qhRI+vRo0dYDUOGDAm2/f7771a3bl3zeDz28MMPB9t37dplSUlJIUfKAjWdcMIJlpubG2xfsGCBSbLHH3882FY4bC5evNgk2dixY0Ne94UXXmgej8fWr19vZma//PKLJSYm2h133BHSb/jw4ZacnGx79uwxs/99IdSsWdN++eWXYL/Ro0ebJDvllFPst99+C7ZfdtlllpCQEDyatHv3bqtatapdd911IcvZsmWL+Xy+kPbAEbcHHnggpG/gF4GA7du3F/toZsDWrVstPj7epk+fHmw788wzw4JIYOf5ySefhLQnJyeHvEcB11xzjdWpU8d27NgR0n7ppZeaz+cLO+rYuHHjkF8WitK/f3+TVOSRTzOzV155xSTZ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Hk/I0fzvv/++RH/9689//rM+/PBDffzxx8G27du3F3kkuiTmzZunZ599VmeccUbwNHhJv1u6d++uatWqaf78+Zo/f75OO+20w16e42K779Chg9LS0jR16tSQyxVef/11ff311+rTp89h51GUTz/9VD6fTy1btjzieZRnHNksA9LS0nTvvffq7rvvVufOndWvXz9VqlRJ77//vl544QWdc8456tu3b4nnW6FCBT377LPq3bu3WrZsqcGDB+uEE07QDz/8oJUrVyolJUV///vfo/paqlWrprPOOkuDBw/W1q1bNWnSJJ144om67rrrivyZvn37qmvXrrrrrrv0/fff65RTTtGbb76pV199VSNGjAj+Fh3Qtm1btWrVKniDRbt27aL6GlJSUjRlyhQNHDhQ7dq106WXXqqaNWtq06ZN+sc//qGOHTuGBePDSUpKUosWLTR//nw1a9ZM1apVU6tWrdSqVauwvh999JHWr1+vv/71rxHndcIJJ6hdu3bKzs4+5ODo7du314oVKzRhwgSlp6erUaNGOv300/Xwww9r5cqVOv3003XdddepRYsW+vnnn7VmzRqtWLFCP//8c4leW0GzZ89Wt27ddN5552nAgAHq1KmT8vLy9MorrygnJ0eXXHJJMCxLf1wbeNFFF+nJJ5+Ux+NRkyZNtGTJkrBrAAOvR/pjgPiePXsqLi5Ol156abHqcvGeHq2BAwdqwYIFGjp0qFauXKmOHTvq4MGDWrt2rRYsWKBly5apQ4cOOuecc5SQkKC+ffsGf8GaPn260tLSQo7aSX+soylTpmjs2LE68cQTlZaWFpVBprt06aLrr79eWVlZ+vzzz3XOOeeoYsWKWrdunRYuXKjHH39cF154YYnm2aZNG8XFxWn8+PHy+/3yer06++yzi7wu9KyzzlL16tW1YsWKkNc0Z84cZWdn6y9/+Yvat2+vhIQEff3113r++eeVmJgY8qct27dvr/nz5+vWW2/VqaeeqsqVK6tv374699xz9corr+gvf/mL+vTpow0bNmjq1Klq0aJFxDBVHFlZWerTp4/OOussXX311fr555/15JNPqmXLliHz7NOnjyZMmKBevXppwIAB2rZtm55++mmdeOKJwctODuf222/XnDlz1KtXL918881KTk7WtGnT1KBBg2LPQ/rj4EDlypWDN0wuW7ZM7733nk455RQtXLgw2K+k3y0VK1bU+eefrxdffFF79+7VY489dthaXGz3FStW1Pjx4zV48GB16dJFl112mbZu3arHH39cDRs21C233FLsdVXY8uXL1bdvX67ZLEqp3vuOQ5o7d6796U9/suTkZPN6vZaRkWH3339/2ADPgeEcCg/6G2m4GDOzzz77zM4//3yrXr26eb1ea9CggV188cX21ltvBfsUNfRFYGDbwgIDVReu6YUXXrDRo0dbWlqaJSUlWZ8+fWzjxo1h8yw89Mfu3bvtlltusfT0dKtYsaI1bdo0bFD3gh555BGTZOPGjQubVnDg5YKKWm9FDR20cuVK69mzp/l8PktMTLQmTZrYVVddZatXrz7s+ok0jMf7779v7du3t4SEhEMOg3TTTTeZJPv2228jTjczGzNmjEmyL774osj6165da507d7akpCSTQgd137p1q914441Wr149q1ixotWuXdu6detm06ZNO+z6Opzdu3fbmDFjrGXLlpaUlGRVqlSxjh072syZMyO+n9u3b7cLLrjAKlWqZKmpqXb99dfbV199FbYt//7773bTTTdZzZo1zePxhKzfwuuzqEHdj+Y9LY5DDeoeyYEDB2z8+PHBgb9TU1Otffv2dv/994eMJ/naa69Z69atLTEx0Ro2bGjjx4+3559/Puw1btmyxfr06WNVqlQxKXxQ98LbSEk/99OmTbP27dsH39eTTz7Zbr/9dvvxxx+DfQKDuhfWpUuXsOFppk+fbo0bN7a4uLhiDYM0fPhwO/HEE0PavvzySxs5cqS1a9fOqlWrZvHx8VanTh276KKLbM2aNSF99+zZYwMGDLCqVauGDEGUn59v48aNswYNGpjX67W2bdvakiVLwvZVRe1bzMK3QTOzl19+2Zo3b25er9datGhR5KDuzz33nDVt2jS4358xY0bEfYj0x6DukXz55ZfWpUuXoxrUPfBITEy0unXr2rnnnmvPP/982HdQQHG+WwKWL19ukszj8djmzZuLrKGgo93uixpabf78+da2bVvzer1WrVq1Qw7qXpw6v/76a5NkK1asiLieYOYxi8FdHih3cnJy1LVrVy1cuLDERziOxOOPP65bbrlF33///SGvWwRQfnz33XfKyMjQ66+/HjylC8TaiBEjtGrVKn366acc2SwC12zimGNmeu6559SlSxeCJnAcady4sa655ho9/PDD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nnuuzj33XBezBgAAwDGEv40OAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkADr377rsaMmSIJGnIkCF69913Y1wRAJQuj5lZrIsoKDc3Vz6fT36/XykpKbEuBwCOWGZmZpHTcnJySq0OAIi2kuS1+FKqCUAB+/fv16ZNm2JdBhwKHM0sSmZmpqZNm1ZK1SAW6tevr8TExFiXAcQcYROIgU2bNh02jKD8Yxso36ZNm6ZmzZrFugwg5gibQAzUr1+fo1rlWMEQOWTIkJD3uvBztoPyq379+rEuASgTuGYTAKLsUNdqFsa1mwCORSXJa9yNDgAAAGcImwAQZeeff35U+wHAsYywCQBR9sorr0S1HwAcywibAAAAcIawCQAAAGcY+ggAHBo1apR69eoVfP7GG2/o4YcfjmFFAFC6nB/ZfPjhh+XxeDRixAjXiwKAMufhhx9WZmambrzxRmVmZhI0ARx3nIbNTz75RM8884xat27tcjEAUOb93//9X6xLAICYcBY29+zZo8svv1zTp09Xamqqq8UAQJlToULxdq3F7QcAxzJne7obb7xRffr0Uffu3Q/ZLy8vT7m5uSEPADiWPfvss1HtBwDHMic3CL344otas2aNPvnkk8P2zcrK0v333++iDACIicaNG0e1HwAcy6J+ZHPz5s26+eablZ2drcTExMP2Hz16tPx+f/CxefPmaJcEAKXucH/znL+JDuB4EfWw+emnn2rbtm1q166d4uPjFR8fr3/+85964oknFB8fr4MHD4b093q9SklJCXkAwLFu6NChkiSPxxPSHngemA4A5V3UT6N369ZN//rXv0LaBg8erIyMDN1xxx2Ki4uL9iIBoEzZs2eP1q5dK4/Ho9dffz3kLM/+/fvVu3dvrV27Vnv27FHlypVjWCkAuBf1I5tVqlRRq1atQh7JycmqXr26WrVqFe3FAUCZk5WVJUnq0aNH2OVEiYmJwRsnA/0AoDxj3A0AiLIff/xRknTxxRdHnH7RRReF9AOA8qxUwmZOTo4mTZpUGosCgJhLT0+XJC1YsCDi9IULF4b0A4DyjCObABBlo0ePliQtX75c+/fvD5m2f/9+rVixIqQfAJRnTsbZBIDjWeXKlZWRkaG1a9eqd+/e6t69uy666CItXLhQK1askJkpIyODm4MAHBc8ZmaxLqKg3Nxc+Xw++f1+hkECcEwbOnSo1q5dG9aekZGhqVOnxqAiAIiOkuQ1jmwCgCNTp07Vnj17lJWVpR9//FHp6ekaPXo0RzQBHFc4sgkAAIASKUle4wYhAAAAOEPYBAAAgDOETQAAADhD2AQAAIAzhE0AAAA4Q9gEAACAM4RNAAAAOEPYBAAAgDOETQAAADhD2AQAAIAzhE0AAAA4Q9gEAACAM4RNAAAAOBMf6wIKMzNJUm5ubowrAQAAQCSBnBbIbYdS5sLm7t27JUn16tWLcSUAAAA4lN27d8vn8x2yj8eKE0lLUX5+vn788UdVqVJFHo8n1uUAwFHLzc1VvXr1tHnzZqWkpMS6HAA4amam3bt3Kz09XRUqHPqqzDIXNgGgvMnNzZXP55Pf7ydsAjjucIMQAAAAnCFsAgAAwBnCJgA45vV6dd9998nr9ca6FAAodVyzCQAAAGc4sgkAAABnCJsAAABwhrAJAAAAZwibAAAAcIawCQAAAGcImwAAAHCGsAkAAABnCJsAAABw5v8DWIAYiHZ8ZsoAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: treat outliers of unemployment and create box plot\n",
        "\n",
        "# Treat outliers in 'Unemployment' specifically and create a box plot\n",
        "\n",
        "# Calculate IQR for Unemployment\n",
        "Q1_unemployment = df['Unemployment'].quantile(0.25)\n",
        "Q3_unemployment = df['Unemployment'].quantile(0.75)\n",
        "IQR_unemployment = Q3_unemployment - Q1_unemployment\n",
        "\n",
        "# Define bounds for outliers in Unemployment\n",
        "lower_bound_unemployment = Q1_unemployment - 1.5 * IQR_unemployment\n",
        "upper_bound_unemployment = Q3_unemployment + 1.5 * IQR_unemployment\n",
        "\n",
        "# Remove outliers from Unemployment\n",
        "df_no_outliers_unemployment = df[~((df['Unemployment'] < lower_bound_unemployment) | (df['Unemployment'] > upper_bound_unemployment))]\n",
        "\n",
        "# Create a box plot for Unemployment without outliers\n",
        "plt.figure(figsize=(6, 4))  # Adjust figure size as needed\n",
        "sns.boxplot(y=df_no_outliers_unemployment['Unemployment'])\n",
        "plt.title('Unemployment (Without Outliers)')\n",
        "plt.ylabel('')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        },
        "id": "Lf20TF0xMnie",
        "outputId": "d22cd260-e675-4dee-9a4f-7d6f53070b60"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: generate correlation matrix on dataset to check multicollinearity\n",
        "\n",
        "# Calculate the correlation matrix\n",
        "correlation_matrix = df_no_outliers.corr()\n",
        "\n",
        "# Plot the correlation matrix using a heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Correlation Matrix of Numerical Features')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 791
        },
        "id": "1x7QlpWjwRu3",
        "outputId": "8fc6d8fd-63d7-4046-b26a-6f81cefb2526"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Select features and target\n",
        "X = df[['Store', 'Holiday_Flag', 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment', 'Month', 'Year']]\n",
        "y = df['Weekly_Sales']"
      ],
      "metadata": {
        "id": "GVHs2gG-xgvb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: extract multiple linear regression model on x and y, give ols regression result\n",
        "\n",
        "import statsmodels.api as sm\n",
        "\n",
        "# Add a constant to the independent variables\n",
        "X = sm.add_constant(X)\n",
        "\n",
        "# Fit the OLS model\n",
        "model = sm.OLS(y, X).fit()\n",
        "\n",
        "# Print the regression results\n",
        "print(model.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TKYu4aO5H2yh",
        "outputId": "3223fe3a-1aa8-4501-81e1-d411285e963d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:           Weekly_Sales   R-squared:                       0.149\n",
            "Model:                            OLS   Adj. R-squared:                  0.148\n",
            "Method:                 Least Squares   F-statistic:                     140.8\n",
            "Date:                Tue, 08 Apr 2025   Prob (F-statistic):          7.03e-219\n",
            "Time:                        16:19:50   Log-Likelihood:                -93832.\n",
            "No. Observations:                6435   AIC:                         1.877e+05\n",
            "Df Residuals:                    6426   BIC:                         1.877e+05\n",
            "Df Model:                           8                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "================================================================================\n",
            "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
            "--------------------------------------------------------------------------------\n",
            "const         6.522e+07   3.01e+07      2.166      0.030    6.18e+06    1.24e+08\n",
            "Store        -1.539e+04    520.192    -29.576      0.000   -1.64e+04   -1.44e+04\n",
            "Holiday_Flag  4.374e+04   2.62e+04      1.668      0.095   -7658.448    9.51e+04\n",
            "Temperature  -1805.6267    390.381     -4.625      0.000   -2570.903   -1040.350\n",
            "Fuel_Price    6.315e+04   2.56e+04      2.471      0.014     1.3e+04    1.13e+05\n",
            "CPI          -2105.9296    191.670    -10.987      0.000   -2481.667   -1730.192\n",
            "Unemployment -2.214e+04   3930.836     -5.633      0.000   -2.98e+04   -1.44e+04\n",
            "Month          1.41e+04   2189.977      6.440      0.000    9809.666    1.84e+04\n",
            "Year         -3.156e+04    1.5e+04     -2.103      0.035    -6.1e+04   -2143.513\n",
            "==============================================================================\n",
            "Omnibus:                      149.989   Durbin-Watson:                   0.133\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              160.033\n",
            "Skew:                           0.384   Prob(JB):                     1.78e-35\n",
            "Kurtosis:                       2.917   Cond. No.                     9.36e+06\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 9.36e+06. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: drop column with highest p value and rerun the model\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import statsmodels.api as sm\n",
        "\n",
        "# ... (Previous code remains unchanged)\n",
        "\n",
        "# Function to drop column with highest p-value and re-run the model\n",
        "def drop_column_and_refit(X, y):\n",
        "    while True:\n",
        "        # Fit the OLS model\n",
        "        X = sm.add_constant(X)  # Ensure constant is added in each iteration\n",
        "        model = sm.OLS(y, X).fit()\n",
        "\n",
        "        # Print the regression results\n",
        "        print(model.summary())\n",
        "\n",
        "        # Get p-values for each coefficient\n",
        "        p_values = model.pvalues\n",
        "\n",
        "        # Exclude the constant term when finding the maximum p-value\n",
        "        p_values = p_values.drop('const', errors='ignore')\n",
        "\n",
        "        # Check if any p-value exceeds the significance level (e.g., 0.05)\n",
        "        if p_values.max() > 0.05:\n",
        "            # Identify the column with the highest p-value\n",
        "            column_to_drop = p_values.idxmax()\n",
        "            print(f\"\\nDropping column '{column_to_drop}' with p-value {p_values.max():.4f}\")\n",
        "\n",
        "            # Drop the column\n",
        "            X = X.drop(column_to_drop, axis=1)\n",
        "\n",
        "        else:\n",
        "            # All p-values are below the significance level, so stop\n",
        "            break\n",
        "\n",
        "    return model\n",
        "\n",
        "# Select features and target\n",
        "X = df[['Store', 'Holiday_Flag', 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment', 'Month', 'Year']]\n",
        "y = df['Weekly_Sales']\n",
        "\n",
        "# Call the function to iteratively drop columns and re-fit the model\n",
        "final_model = drop_column_and_refit(X, y)\n",
        "\n",
        "# Print the final model summary\n",
        "print(\"\\nFinal Model Summary:\")\n",
        "print(final_model.summary())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VeD3f79qM5lg",
        "outputId": "dcae7b8a-2422-4af1-ef13-a8df52da6f9b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:           Weekly_Sales   R-squared:                       0.149\n",
            "Model:                            OLS   Adj. R-squared:                  0.148\n",
            "Method:                 Least Squares   F-statistic:                     140.8\n",
            "Date:                Tue, 08 Apr 2025   Prob (F-statistic):          7.03e-219\n",
            "Time:                        16:20:46   Log-Likelihood:                -93832.\n",
            "No. Observations:                6435   AIC:                         1.877e+05\n",
            "Df Residuals:                    6426   BIC:                         1.877e+05\n",
            "Df Model:                           8                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "================================================================================\n",
            "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
            "--------------------------------------------------------------------------------\n",
            "const         6.522e+07   3.01e+07      2.166      0.030    6.18e+06    1.24e+08\n",
            "Store        -1.539e+04    520.192    -29.576      0.000   -1.64e+04   -1.44e+04\n",
            "Holiday_Flag  4.374e+04   2.62e+04      1.668      0.095   -7658.448    9.51e+04\n",
            "Temperature  -1805.6267    390.381     -4.625      0.000   -2570.903   -1040.350\n",
            "Fuel_Price    6.315e+04   2.56e+04      2.471      0.014     1.3e+04    1.13e+05\n",
            "CPI          -2105.9296    191.670    -10.987      0.000   -2481.667   -1730.192\n",
            "Unemployment -2.214e+04   3930.836     -5.633      0.000   -2.98e+04   -1.44e+04\n",
            "Month          1.41e+04   2189.977      6.440      0.000    9809.666    1.84e+04\n",
            "Year         -3.156e+04    1.5e+04     -2.103      0.035    -6.1e+04   -2143.513\n",
            "==============================================================================\n",
            "Omnibus:                      149.989   Durbin-Watson:                   0.133\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              160.033\n",
            "Skew:                           0.384   Prob(JB):                     1.78e-35\n",
            "Kurtosis:                       2.917   Cond. No.                     9.36e+06\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 9.36e+06. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n",
            "\n",
            "Dropping column 'Holiday_Flag' with p-value 0.0953\n",
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:           Weekly_Sales   R-squared:                       0.149\n",
            "Model:                            OLS   Adj. R-squared:                  0.148\n",
            "Method:                 Least Squares   F-statistic:                     160.5\n",
            "Date:                Tue, 08 Apr 2025   Prob (F-statistic):          2.13e-219\n",
            "Time:                        16:20:46   Log-Likelihood:                -93834.\n",
            "No. Observations:                6435   AIC:                         1.877e+05\n",
            "Df Residuals:                    6427   BIC:                         1.877e+05\n",
            "Df Model:                           7                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "================================================================================\n",
            "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
            "--------------------------------------------------------------------------------\n",
            "const         6.302e+07   3.01e+07      2.095      0.036    4.04e+06    1.22e+08\n",
            "Store        -1.539e+04    520.254    -29.583      0.000   -1.64e+04   -1.44e+04\n",
            "Temperature  -1926.5248    383.648     -5.022      0.000   -2678.603   -1174.446\n",
            "Fuel_Price    6.082e+04   2.55e+04      2.383      0.017    1.08e+04    1.11e+05\n",
            "CPI          -2098.4376    191.644    -10.950      0.000   -2474.124   -1722.752\n",
            "Unemployment -2.179e+04   3925.844     -5.552      0.000   -2.95e+04   -1.41e+04\n",
            "Month         1.473e+04   2157.805      6.826      0.000    1.05e+04     1.9e+04\n",
            "Year         -3.047e+04    1.5e+04     -2.032      0.042   -5.99e+04   -1071.732\n",
            "==============================================================================\n",
            "Omnibus:                      151.076   Durbin-Watson:                   0.132\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              161.237\n",
            "Skew:                           0.385   Prob(JB):                     9.72e-36\n",
            "Kurtosis:                       2.914   Cond. No.                     9.36e+06\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 9.36e+06. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n",
            "\n",
            "Final Model Summary:\n",
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:           Weekly_Sales   R-squared:                       0.149\n",
            "Model:                            OLS   Adj. R-squared:                  0.148\n",
            "Method:                 Least Squares   F-statistic:                     160.5\n",
            "Date:                Tue, 08 Apr 2025   Prob (F-statistic):          2.13e-219\n",
            "Time:                        16:20:46   Log-Likelihood:                -93834.\n",
            "No. Observations:                6435   AIC:                         1.877e+05\n",
            "Df Residuals:                    6427   BIC:                         1.877e+05\n",
            "Df Model:                           7                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "================================================================================\n",
            "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
            "--------------------------------------------------------------------------------\n",
            "const         6.302e+07   3.01e+07      2.095      0.036    4.04e+06    1.22e+08\n",
            "Store        -1.539e+04    520.254    -29.583      0.000   -1.64e+04   -1.44e+04\n",
            "Temperature  -1926.5248    383.648     -5.022      0.000   -2678.603   -1174.446\n",
            "Fuel_Price    6.082e+04   2.55e+04      2.383      0.017    1.08e+04    1.11e+05\n",
            "CPI          -2098.4376    191.644    -10.950      0.000   -2474.124   -1722.752\n",
            "Unemployment -2.179e+04   3925.844     -5.552      0.000   -2.95e+04   -1.41e+04\n",
            "Month         1.473e+04   2157.805      6.826      0.000    1.05e+04     1.9e+04\n",
            "Year         -3.047e+04    1.5e+04     -2.032      0.042   -5.99e+04   -1071.732\n",
            "==============================================================================\n",
            "Omnibus:                      151.076   Durbin-Watson:                   0.132\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              161.237\n",
            "Skew:                           0.385   Prob(JB):                     9.72e-36\n",
            "Kurtosis:                       2.914   Cond. No.                     9.36e+06\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 9.36e+06. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate residuals\n",
        "residuals = model.resid\n",
        "\n",
        "# Create a histogram of residuals\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.hist(residuals, bins=30, edgecolor='black')\n",
        "plt.xlabel('Residuals')\n",
        "plt.ylabel('Frequency')\n",
        "plt.title('Distribution of Residuals')\n",
        "\n",
        "# Add a normal distribution curve to the histogram\n",
        "from scipy.stats import norm\n",
        "xmin, xmax = plt.xlim()\n",
        "x = np.linspace(xmin, xmax, 100)\n",
        "p = norm.pdf(x, residuals.mean(), residuals.std())\n",
        "plt.plot(x, p * len(residuals) * (xmax - xmin) / 30, 'r', linewidth=2) # Scale to match histogram\n",
        "\n",
        "plt.show()\n",
        "\n",
        "# Check for normality using a Q-Q plot\n",
        "import statsmodels.api as sm\n",
        "fig = sm.qqplot(residuals, line='45')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3AgW-V7EI3LF",
        "outputId": "92f5610e-f3d1-43ef-94c8-ded7383775f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}